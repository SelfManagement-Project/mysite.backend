<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mysite.web.schedule.mapper.ScheduleMapper">
	<select id="getScheduleByToken" parameterType="String"
		resultType="com.mysite.web.schedule.model.CalendarEntity">
		SELECT
		s.schedule_id as scheduleId,
		s.user_id as userId,
		u.user_email as
		email,
		u.user_name as userName,
		s.title as title,
		s.date as date,
		s.start_time as start,
		s.end_time as end,
		s.type as type,
		s.is_completed
		as isCompleted,
		s.description as description,<!--  s.status as status, -->
		s.created_at as createdAt,
		s.updated_at as updatedAt
		FROM
		schedule s
		JOIN
		"user" u ON s.user_id = u.user_id
		WHERE
		u.user_email = #{userEmail}
		ORDER BY
		s.start_time ASC
	</select>

	<insert id="writeScheduleByToken"
		parameterType="com.mysite.web.schedule.model.CalendarEntity">
		INSERT INTO "schedule" (
		user_id,
		title,
		date,
		start_time,
		end_time,
		type,
		is_completed,
		created_at,
		updated_at,
		description
		) VALUES (
		#{userId},
		#{title},
		#{date}::date,
		#{start}::time,
		#{end}::time,
		#{type},
		#{isCompleted},
		CURRENT_TIMESTAMP,
		CURRENT_TIMESTAMP,
		#{description}
		)
	</insert>

	<!-- 일정 수정 -->
	<update id="modifyScheduleByToken"
		parameterType="com.mysite.web.schedule.model.CalendarEntity">
		UPDATE "schedule"
		SET
			title = #{title},
			date = #{date}::date,
			start_time = #{start}::time,
			end_time = #{end}::time,
			type = #{type},
			is_completed = #{isCompleted},
			updated_at = CURRENT_TIMESTAMP
		WHERE schedule_id = #{scheduleId}
		AND user_id = #{userId}
	</update>

	<delete id="deleteScheduleByToken" parameterType="com.mysite.web.schedule.model.CalendarEntity">
	    DELETE FROM "schedule"
	    WHERE schedule_id = #{scheduleId} 
	    AND user_id = #{userId}
	</delete>
	
	<!-- 오늘 할일 조회 -->
	<select id="getTodosByToken" parameterType="Long" resultType="com.mysite.web.schedule.model.CalendarEntity">
	   SELECT
	        s.schedule_id as scheduleId,
	        s.user_id as userId,
	        s.title as title,
	        s.date as date,
	        s.start_time as start,
	        s.end_time as end,
	        s.type as type,
	        s.is_completed as isCompleted,
	        s.created_at as createdAt,
	        s.updated_at as updatedAt,
			s.priority
	    FROM schedule s
	    JOIN "user" u ON s.user_id = u.user_id
	    WHERE
	        u.user_id = #{userId}
	        AND s.date = CURRENT_DATE 
	    ORDER BY s.date ASC, s.start_time ASC
	</select>
	
	<update id="modifyTodosByToken" parameterType="com.mysite.web.schedule.model.TaskEntity">
	    UPDATE "schedule"
	    SET is_completed = #{isCompleted},
	        updated_at = CURRENT_TIMESTAMP
	    WHERE schedule_id = #{scheduleId}
	    AND user_id = #{userId}
	</update>
	
	
	<!-- 다가오는 일정 조회 -->
	<select id="getUpcomingByToken" parameterType="Long"
	    resultType="com.mysite.web.schedule.model.CalendarEntity">
	    SELECT
	        s.schedule_id as scheduleId,
	        s.user_id as userId,
	        s.title as title,
	        s.date as date,
	        s.start_time as start,
	        s.end_time as end,
	        s.type as type,
	        s.is_completed as isCompleted,
	        s.created_at as createdAt,
	        s.updated_at as updatedAt
	    FROM schedule s
	    JOIN "user" u ON s.user_id = u.user_id
	    WHERE
	        u.user_id = #{userId}
	        AND s.date >= CURRENT_DATE  <!-- 오늘 이후 일정만 조회 -->
	    ORDER BY s.date ASC, s.start_time ASC
	</select>
	
	
	<!-- 사용자의 이번 주 총 할 일 개수 -->
    <select id="getTotalWeeklyTasks" parameterType="long" resultType="int">
        SELECT COUNT(*)
        FROM "schedule"
        WHERE user_id = #{userId}
        AND created_at >= DATE_TRUNC('week', NOW())
    </select>

    <!-- 사용자의 이번 주 완료된 할 일 개수 -->
    <select id="getCompletedWeeklyTasks" parameterType="long" resultType="int">
        SELECT COUNT(*)
        FROM "schedule"
        WHERE user_id = #{userId}
        AND is_completed = true
        AND created_at >= DATE_TRUNC('week', NOW())
    </select>
	
	
	<select id="getHabitsWithProgress" resultType="com.mysite.web.schedule.dto.HabitProgressDTO">
	    SELECT 
	        h.habit_id AS habitId,
	        h.name AS name,
	        COALESCE(
	            ROUND(
	                100.0 * SUM(CASE WHEN hl.status = '완료' THEN 1 ELSE 0 END) / COUNT(hl.log_id)
	            , 0), 0) AS completed,
	        100 - COALESCE(
	            ROUND(
	                100.0 * SUM(CASE WHEN hl.status = '완료' THEN 1 ELSE 0 END) / COUNT(hl.log_id)
	            , 0), 0) AS remaining
	    FROM habit h
	    LEFT JOIN habit_log hl ON h.habit_id = hl.habit_id
	    WHERE h.user_id = #{userId}
	    GROUP BY h.habit_id, h.name
	</select>
	
	
	
	
	
	
	
	
	
	
	
	

</mapper>
